%section#admin
  .row
    .col.s12.m8.offset-m2

      .card.output#output
        .card-content
          .clearfix
            .left
              %span.card-title Download log sheet
          %form.download{:method=>"post",:action=>"/download_log_sheet"}
            .row
              .col.s8.m10
                .input-field
                  %input#date.datepicker.ex{:validate=>true,:required=>true,:name=>"date",:type=>"text",:value=>@enabledDates.sort.last,:placeholder=>"Pick a date here"}
                  -#%input#date.datepicker.ex{:validate=>true,:required=>true,:name=>"date",:type=>"text",:placeholder=>"Pick a date here"}
                  %label{:for=>"date"} Date
              .col.s4.m2
                .input-field
                  %button.btn-large.btn-floating.waves-effect.waves-light.submit{:type=>"submit"}
                    %i.material-icons file_download

      .card.output#edit
        .card-content
          .clearfix
            .left
              %span.card-title Edit previous records
            .right
              %a#clear.red-text.text-darken-4{:href=>"#",:style=>"font-size:16px;line-height:38px;"} Clear current form
          %form.edit{:method=>"post",:action=>"/edit_previous"}
            .row
              .col.s8.m10
                .input-field
                  %input#edit_date.datepicker.ex{:validate=>true,:required=>true,:name=>"date",:type=>"text",:value=>@enabledDates.sort.last,:placeholder=>"Pick a date here"}
                  -#%input#edit_date.datepicker.ex{:validate=>true,:required=>true,:name=>"date",:type=>"text",:placeholder=>"Pick a date here"}
                  %label{:for=>"edit_date"} Date
              .col.s4.m2
                .input-field
                  %button.btn-large.btn-floating.waves-effect.waves-light.submit{:type=>"submit"}
                    %i.material-icons edit

      -if access
        .card.layout#layout
          .card-content
            .clearfix
              .left
                %span.card-title Layout
            %form.download#playout{:method=>"post",:action=>"/download_layout"}
              .row
                .col.s8.m10
                  .input-field
                    -p @layoutDates.uniq.sort.last
                    %input#layout_date.datepicker.ex{:validate=>true,:required=>true,:name=>"date",:type=>"text",:value=>@layoutDates.uniq.sort.last,:placeholder=>"Pick a date here"}
                    -#%input#layout_date.datepicker.ex{:validate=>true,:required=>true,:name=>"date",:type=>"text",:placeholder=>"Pick a date here"}
                    %label{:for=>"layout_date"} Download old layout
                .col.s4.m2
                  .input-field
                    %button.btn-large.btn-floating.waves-effect.waves-light.submit{:type=>"submit"}
                      %i.material-icons file_download
            %form.upload#ulayout{:enctype=>"multipart/form-data",:method=>"post",:action=>"/update_layout"}
              .row
                .col.s8.m10
                  .input-field.file-field
                    .btn.red.darken-4
                      %span UPLOAD LAYOUT
                      %input.file{:type=>"file",:name=>"layout_file","accept"=>".xlsx,application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"}
                    .file-path-wrapper
                      %input.file-path.validate{:type=>"text",:placeholder=>"Upload your layout.xlsx here!"}
                .col.s4.m2
                  .input-field
                    %button.red.darken-4.btn-large.btn-floating.waves-effect.waves-light.submit.disabled{:type=>"submit"}
                      %i.material-icons file_upload

        .card.mapping#mapping
          .card-content
            .clearfix
              .left
                %span.card-title Mapping
            %form.download#pmapping{:method=>"post",:action=>"/download_mapping"}

              .row
                .col.s8.m10
                  .input-field
                    -p @mappingDates.uniq.sort.last
                    %input#mapping_date.datepicker.ex{:validate=>true,:required=>true,:name=>"date",:type=>"text",:value=>@mappingDates.uniq.sort.last,:placeholder=>"Pick a date here"}
                    -#%input#mapping_date.datepicker.ex{:validate=>true,:required=>true,:name=>"date",:type=>"text",:placeholder=>"Pick a date here"}
                    %label{:for=>"mapping_date"} Download old mapping
                .col.s4.m2
                  .input-field
                    %button.btn-large.btn-floating.waves-effect.waves-light.submit{:type=>"submit"}
                      %i.material-icons file_download
            %form.upload#umapping{:enctype=>"multipart/form-data",:method=>"post",:action=>"/update_mapping"}
              .row
                .col.s8.m10
                  .input-field.file-field
                    .btn.red.darken-4
                      %span UPLOAD MAPPING
                      %input.file{:type=>"file",:name=>"mapping_file","accept"=>".csv,text/csv"}
                    .file-path-wrapper
                      %input.file-path.validate{:type=>"text",:placeholder=>"Upload your mapping.csv here!"}
                .col.s4.m2
                  .input-field
                    %button.red.darken-4.btn-large.btn-floating.waves-effect.waves-light.submit.disabled{:type=>"submit"}
                      %i.material-icons file_upload

        .card.lubrication#lubrication
          .card-content
            .clearfix
              .left
                %span.card-title Lubrication info
            %form.download#plube{:method=>"post",:action=>"/download_lube"}
              .row
                .col.s8.m10
                  .input-field
                    -p @lubeDates.uniq.sort.last
                    %input#lube_date.datepicker.ex{:validate=>true,:required=>true,:name=>"date",:type=>"text",:value=>@lubeDates.uniq.sort.last,:placeholder=>"Pick a date here"}
                    -#%input#lube_date.datepicker.ex{:validate=>true,:required=>true,:name=>"date",:type=>"text",:placeholder=>"Pick a date here"}
                    %label{:for=>"lube_date"} Download old lubrication info
                .col.s4.m2
                  .input-field
                    %button.btn-large.btn-floating.waves-effect.waves-light.submit{:type=>"submit"}
                      %i.material-icons file_download
            %form.upload#ulubrication{:enctype=>"multipart/form-data",:method=>"post",:action=>"/update_lubrication"}
              .row
                .col.s8.m10
                  .input-field.file-field
                    .btn.red.darken-4
                      %span UPLOAD LUBRICATION INFO
                      %input.file{:type=>"file",:name=>"lubrication_file","accept"=>".csv,text/csv"}
                    .file-path-wrapper
                      %input.file-path.validate{:type=>"text",:placeholder=>"Upload your lubrication.csv here!"}
                .col.s4.m2
                  .input-field
                    %button.red.darken-4.btn-large.btn-floating.waves-effect.waves-light.submit.disabled{:type=>"submit"}
                      %i.material-icons file_upload

      .card.history#history
        .card-content
          .clearfix
            .left
              %a.teal-text{:href=>"/output/engine_log.csv"}
                %span.card-title{:style=>"font-size:24px;line-height:64px;"} Download logging history (.CSV)
            .right
              %a.teal.btn-large.btn-floating.waves-effect.waves-light{:href=>"/output/engine_log.csv",:style=>"font-size:16px;line-height:38px;"}
                %i.material-icons file_download


-content_for :body_end do

  :javascript
    $(document).on('submit', 'form.upload', function (e) {
      e.preventDefault();
      that = $(this)
      console.log(this)
      $.ajax({
        url:that.attr("action"),
        type:'POST',
        data: new FormData(that.get(0)),
        contentType:false,
        cache:false,
        processData:false,
        success:function(data){
          if (data == "ok") {
            that[0].reset();
            that.find("button.submit").addClass("disabled");
            M.toast({html: '<b>Success</b>',classes:"teal"})
          } else {
            M.toast({html: '<b>Error: file not recognized</b>',classes:"red darken-4"})
          }
        },
        error:function(data){
          M.toast({html: '<b>Error</b>',classes:"red darken-4"})
        }
      });
    })
    $(document).on('submit', 'form.edit', function (e) {
      e.preventDefault();
      that = $(this)
      console.log(this)
      $.ajax({
        url:that.attr("action"),
        type:'POST',
        data: new FormData(that.get(0)),
        contentType:false,
        cache:false,
        processData:false,
        success:function(data){
          if (data == "{}") {
            M.toast({html: '<b>Error</b>',classes:"red darken-4"})
          } else {
            data = JSON.parse(data);
            localStorage.clear();
            $.each(data[1],function(i,e){
              addLube(e[0],e[1])
            })
            fields = data[0].replace(/^\s*"/,"").replace(/"\s*$/,"").split("&")
            $.each(fields,function(i,e){
              e = e.split("=");
              setLocal(e[0],e[1]);
            })
            window.location = "/#update"
            M.toast({html: '<b>Loaded previous recording.</b>',classes:"teal"})
          }

        }
      });
    })
    $(document).on('change', '.file-field input[type="file"]', function (e) {
      e.preventDefault();
      var file = this.files[0];
      //console.log(file.type)
      //console.log($(this).attr("accept"))
      //console.log($(this))
      if (file.type == $(this).attr("accept") || true) {
        $(this).closest(".row").find("button.submit").removeClass("disabled")
      }
    });
    $("a#clear").on('click tap', function (e) {
      localStorage.clear();
      M.toast({html: '<b>Cleared current form.</b>',classes:"teal"})
    });
    var enabledDates = #{@enabledDates};
    var layoutDates = #{@layoutDates.uniq};
    var mappingDates = #{@mappingDates.uniq};
    var lubeDates = #{@lubeDates.uniq};

    function pad(num) {
      var norm = Math.floor(Math.abs(num));
      return (norm < 10 ? '0' : '') + norm;
    };
    function init(e){
      console.log("no")
      $("main").show();
    }

    $("#date,#edit_date").datepicker( {
      format: 'yyyy-mm-dd',
      disableDayFn: function(date) {
        var dateParsed = date.getFullYear()+"-"+pad(date.getMonth()+1)+"-"+pad(date.getDate());
        return enabledDates.indexOf(dateParsed) == -1 
      }
    });

    $("#layout_date").datepicker( {
      format: 'yyyy-mm-dd',
      defaultDate: "#{@layoutDates.sort.last}",
      setDefaultDate: true,
      disableDayFn: function(date) {
        var dateParsed = date.getFullYear()+"-"+pad(date.getMonth()+1)+"-"+pad(date.getDate());
        return layoutDates.indexOf(dateParsed) == -1 
      }
    });

    $("#mapping_date").datepicker( {
      format: 'yyyy-mm-dd',
      disableDayFn: function(date) {
        var dateParsed = date.getFullYear()+"-"+pad(date.getMonth()+1)+"-"+pad(date.getDate());
        return mappingDates.indexOf(dateParsed) == -1 
      }
    });

    $("#lube_date").datepicker( {
      format: 'yyyy-mm-dd',
      disableDayFn: function(date) {
        var dateParsed = date.getFullYear()+"-"+pad(date.getMonth()+1)+"-"+pad(date.getDate());
        return lubeDates.indexOf(dateParsed) == -1 
      }
    });
